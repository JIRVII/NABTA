{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/%D9%8A%D8%A7%D9%85%D9%8A%D9%83%D8%B3/Documents/GitHub/NABTA/nabta/src/app/plantai/page.jsx"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    const body = await req.json();\r\n    const userMessage = body.message;\r\n\r\n    if (!userMessage) {\r\n      return NextResponse.json({ error: \"ŸÑŸÖ Ÿäÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿ±ÿ≥ÿßŸÑÿ©.\" }, { status: 400 });\r\n    }\r\n\r\n    // üîë ÿßÿ≥ÿ™ÿØÿπÿßÿ° Google Generative AI API\r\n    const res = await fetch(\r\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=\" + process.env.GOOGLE_API_KEY,\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          contents: [\r\n            {\r\n              parts: [{ text: userMessage }]\r\n            }\r\n          ]\r\n        }),\r\n      }\r\n    );\r\n\r\n    const data = await res.json();\r\n\r\n    // üîé ÿßÿ≥ÿ™ÿÆÿ±ÿßÿ¨ ÿßŸÑÿ±ÿØ ŸÖŸÜ Google\r\n    const reply = data?.candidates?.[0]?.content?.parts?.[0]?.text || \"ŸÑŸÖ ÿ£ÿ™ŸÖŸÉŸÜ ŸÖŸÜ ÿ™ŸàŸÑŸäÿØ ÿ±ÿØ ÿ≠ÿßŸÑŸäÿßŸã.\";\r\n\r\n    return NextResponse.json({ reply });\r\n  } catch (error) {\r\n    console.error(\"API Error:\", error);\r\n    return NextResponse.json({ error: \"ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿÆÿßÿØŸÖ.\" }, { status: 500 });\r\n  }\r\n}\r\nconst res = await fetch(\"/api/plantai\", {\r\n  method: \"POST\",\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n  body: JSON.stringify({ message: userMsg }),\r\n});"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,cAAc,KAAK,OAAO;QAEhC,IAAI,CAAC,aAAa;YAChB,OAAO,uLAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,sCAAsC;QACtC,MAAM,MAAM,MAAM,MAChB,4FAA4F,QAAQ,GAAG,CAAC,cAAc,EACtH;YACE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;gBACnB,UAAU;oBACR;wBACE,OAAO;4BAAC;gCAAE,MAAM;4BAAY;yBAAE;oBAChC;iBACD;YACH;QACF;QAGF,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,4BAA4B;QAC5B,MAAM,QAAQ,MAAM,YAAY,CAAC,EAAE,EAAE,SAAS,OAAO,CAAC,EAAE,EAAE,QAAQ;QAElE,OAAO,uLAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,uLAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF;AACA,MAAM,MAAM,MAAM,MAAM,gBAAgB;IACtC,QAAQ;IACR,SAAS;QAAE,gBAAgB;IAAmB;IAC9C,MAAM,KAAK,SAAS,CAAC;QAAE,SAAS;IAAQ;AAC1C","debugId":null}}]
}